// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.frc2881.commands.scoring.arm;

import edu.wpi.first.wpilibj.GenericHID.Hand;
import edu.wpi.first.wpilibj.command.Command;

import org.frc2881.OI;
import org.frc2881.Robot;
import org.frc2881.subsystems.Arm;
import org.frc2881.subsystems.Arm.WristState;

/**
 *
 */
public class ArmControl extends Command {

    public ArmControl() {
        requires(Robot.arm);
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
        Robot.log("Arm control has started");
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
        double speed = -Robot.oi.manipulator.getY(Hand.kRight);
        Robot.arm.setArmMotorSpeed(OI.squareInput(OI.applyDeadband(speed)));
        if (Robot.arm.getArmHeight() > Arm.ILLEGAL_HEIGHT){
            Robot.arm.moveWrist(WristState.UP);
        }
    }

    @Override
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
        Robot.log("Arm Control has ended");
    }

}

