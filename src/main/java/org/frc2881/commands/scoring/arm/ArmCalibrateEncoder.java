// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.frc2881.commands.scoring.arm;

import org.frc2881.Robot;
import org.frc2881.subsystems.Arm;

import edu.wpi.first.wpilibj.command.Command;

/**
 *
 */
public class ArmCalibrateEncoder extends Command {



    public ArmCalibrateEncoder() {
        requires(Robot.arm);
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
        Robot.log("Calibrate Arm Encoder has started");
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
        //sets motor speed to -0.3
        //if (!autonomous) {
          //  Robot.arm.setMotorForCalibration();
        //}
    }

    @Override
    protected boolean isFinished() {
       
        
        if (timeSinceInitialized() < .5) {
            return false;
        }


        if (Robot.arm.isSpeedReallySmall()) {
            Robot.log("Speed ended arm calibration: " + Robot.arm.getArmRate());
            return true;
        }
        return true;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
        Robot.arm.setArmMotorSpeed(0);
        Robot.arm.resetArmEncoder();
    }

}

