// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.frc2881.commands.scoring.hp;

import edu.wpi.first.wpilibj.XboxController;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.command.CommandGroup;
import edu.wpi.first.wpilibj.command.StartCommand;

import java.util.function.Supplier;

import org.frc2881.OI;
import org.frc2881.commands.basic.rumble.RumbleYes;
import org.frc2881.commands.basic.wait.WaitForever;
import org.frc2881.commands.scoring.arm.ArmToHeight;
import org.frc2881.subsystems.Arm;
import org.frc2881.subsystems.Intake;
import org.frc2881.subsystems.Arm.ArmValue;
import org.frc2881.subsystems.Intake.GrabberState;
import org.frc2881.subsystems.Intake.RollerDirection;
import org.frc2881.subsystems.Intake.SuctionState;

/**
 *
 */
public class HPIntakeGround extends CommandGroup {

    public HPIntakeGround(Supplier<OI.TriggerButtons> function, XboxController manipulator) {
        super("IntakeHPGround");

        addSequential(new HPSetRollers(1.0, RollerDirection.INTAKE));

        addSequential(new Command() {
            @Override
            protected boolean isFinished() {
                return function.get() == OI.TriggerButtons.LIFT_HP;
            }
        });

        addSequential(new HPSetRollers(Intake.HP_DETECTED_SPEED, RollerDirection.INTAKE));
        addSequential(new ArmToHeight(ArmValue.VALUE, Arm.FLOOR, false));
        addSequential(new HPSuction(SuctionState.CLOSED));
        addSequential(new HPSetRollers(0.0, RollerDirection.INTAKE));
        addSequential(new HPGrabber(GrabberState.GRAB));
        addSequential(new StartCommand(new RumbleYes(manipulator)));
        addSequential(new WaitForever());
    }
}