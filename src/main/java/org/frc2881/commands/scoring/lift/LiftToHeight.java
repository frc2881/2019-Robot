// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.frc2881.commands.scoring.lift;

import org.frc2881.Robot;

import edu.wpi.first.wpilibj.command.Command;

/**
 *
 */
public class LiftToHeight extends Command {

    double initial;
    
    public LiftToHeight() {
        requires(Robot.lift);
        requires(Robot.arm);
    }

    @Override
    protected void initialize() {
        Robot.logInitialize(this);
        initial = Robot.arm.getArmEncoderHeight();
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
        double goal = 1;
        double tilt = Robot.drive.navX.getRoll();
        double difference = tilt - goal;

        Robot.lift.setLiftMotors(1);
        Robot.arm.setArmMotorSpeed(-.4 + difference * -0.05);
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        double height = 76.451 - 55;
        return height - 1 <= initial - Robot.arm.getArmEncoderHeight();
    }

    @Override
    protected void end() {
        Robot.lift.setLiftMotors(0);
        Robot.arm.setArmMotorSpeed(0);
        Robot.logEnd(this);
    }

}
